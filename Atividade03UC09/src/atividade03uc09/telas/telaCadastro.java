
package atividade03uc09.telas;

import atividade03uc09.model.Consulta;
import atividade03uc09.model.ListaConsulta;
import java.text.ParseException;
import java.util.regex.Pattern;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.text.MaskFormatter;
import java.util.regex.Matcher;



public class telaCadastro extends javax.swing.JFrame {

   private telaTabela telaPrincipal;
   
   public void mostrarTela(telaTabela obj) {
       try{
       this.telaPrincipal = obj;
       setVisible(true);
       MaskFormatter mascaraCPF = new MaskFormatter("###.###.###-##");
        mascaraCPF.install(CpfField);
        MaskFormatter mascaraData = new MaskFormatter("##/##/####");
        mascaraData.install(DataField);
        MaskFormatter mascaraTelefone = new MaskFormatter("(##) #####-####");
        mascaraTelefone.install(TelefoneField);
     }catch(ParseException p){
    }
   }
    
   public static boolean validarCPF(JFormattedTextField cpfField) {
    String cpf = cpfField.getText().replaceAll("[^0-9]", "");

    if (cpf.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Campo CPF vazio!");
        return false;
    }

    if (cpf.length() != 11) {
        JOptionPane.showMessageDialog(null, "CPF inválido!");
        return false;
    }

    int[] digitos = new int[11];

    for (int i = 0; i < 11; i++) {
        digitos[i] = Character.getNumericValue(cpf.charAt(i));
    }

    int soma = 0;

    for (int i = 0; i < 9; i++) {
        soma += digitos[i] * (10 - i);
    }

    int digitoVerificador1 = 11 - (soma % 11);

    if (digitoVerificador1 > 9) {
        digitoVerificador1 = 0;
    }

    if (digitos[9] != digitoVerificador1) {
        JOptionPane.showMessageDialog(null, "CPF inválido!");
        return false;
    }

    soma = 0;

    for (int i = 0; i < 10; i++) {
        soma += digitos[i] * (11 - i);
    }

    int digitoVerificador2 = 11 - (soma % 11);

    if (digitoVerificador2 > 9) {
        digitoVerificador2 = 0;
    }

    if (digitos[10] != digitoVerificador2) {
        JOptionPane.showMessageDialog(null, "CPF inválido!");
        return false;
    }

    return true;
}

   
    public static boolean validarData(JFormattedTextField dataField) {
        String data = dataField.getText().replaceAll("[^0-9/]", ""); //Remove caracteres não-numéricos exceto a barra
        //Expressão regular para validar data no formato dd/mm/aaaa
        String regex = "^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/[0-9]{4}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(data);
          if (data.equals("") || data.length() != 10 || !matcher.matches()) { //Verifica se campo está vazio ou tem comprimento diferente de 10
            JOptionPane.showMessageDialog(null, "Campo Data inválido ou vazio!");
        }
        return matcher.matches();
    }
   
    public static boolean validarTelefone(JFormattedTextField telefoneField) {
    String telefone = telefoneField.getText().replaceAll("[^0-9]", "");

    if (telefone.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Campo de telefone vazio!");
        return false;
    }

    if (telefone.length() != 11) {
        JOptionPane.showMessageDialog(null, "Telefone inválido!");
        return false;
    }

    String ddd = telefone.substring(0, 2);

    if (!ddd.matches("[1-9][1-9]")) {
        JOptionPane.showMessageDialog(null, "DDD inválido!");
        return false;
    }

    String prefixo = telefone.substring(2, 7);

    if (!prefixo.matches("[1-9][0-9]{4}")) {
        JOptionPane.showMessageDialog(null, "Prefixo inválido!");
        return false;
    }

    String sufixo = telefone.substring(7, 11);

    if (!sufixo.matches("[0-9]{4}")) {
        JOptionPane.showMessageDialog(null, "Sufixo inválido!");
        return false;
    }

    return true;
}

    public static boolean validarNome(JFormattedTextField nomeField)   {
        String nome = nomeField.getText();
        if(nome.isEmpty()){
            JOptionPane.showMessageDialog(null, "Campo nome não pode ser vazio!");
            return false;
        }else{
            return true;
        }
    }
    
    public telaCadastro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        ButCadastra = new javax.swing.JButton();
        ButCancela = new javax.swing.JButton();
        DataField = new javax.swing.JFormattedTextField();
        NomeField = new javax.swing.JFormattedTextField();
        TelefoneField = new javax.swing.JFormattedTextField();
        CpfField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 29)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastrar Consulta");

        jLabel2.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel2.setText("Data Consulta: ");

        jLabel3.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel3.setText("Nome Paciente: ");

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel4.setText("Telefone:");

        jLabel5.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel5.setText("CPF: ");

        jCheckBox1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jCheckBox1.setText("Já é paciente");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        ButCadastra.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        ButCadastra.setText("Cadastrar");
        ButCadastra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButCadastraActionPerformed(evt);
            }
        });

        ButCancela.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        ButCancela.setText("Voltar");
        ButCancela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButCancelaActionPerformed(evt);
            }
        });

        CpfField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CpfFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jCheckBox1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(NomeField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TelefoneField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CpfField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DataField, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ButCancela, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(ButCadastra, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(NomeField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TelefoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CpfField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DataField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButCadastra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButCancela, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void ButCancelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButCancelaActionPerformed
                       
        dispose();
    }//GEN-LAST:event_ButCancelaActionPerformed

    private void ButCadastraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButCadastraActionPerformed
        if(validarCPF(CpfField) && validarData(DataField) && validarTelefone(TelefoneField) && validarNome(NomeField)){
       Consulta consulta = new Consulta();
       consulta.setNome(NomeField.getText());
       consulta.setTelefone(TelefoneField.getText());
       consulta.setCpf(CpfField.getText());
       consulta.setData(DataField.getText());
       if(jCheckBox1.isSelected())
            consulta.setFidelidade("Sim");
       else
            consulta.setFidelidade("Não");
       consulta.setEncerramento("Não");
       ListaConsulta.adicionar(consulta);
       
       JOptionPane.showMessageDialog(null, "Os dados foram cadastrados com sucesso: \n" );
       
       NomeField.setText("");
       TelefoneField.setText("");
       CpfField.setText("");
       DataField.setText("");
       NomeField.requestFocus();
       telaPrincipal.atualizarTabela();
       jCheckBox1.setSelected(false);
        }else{
            
        }
    }//GEN-LAST:event_ButCadastraActionPerformed

    private void CpfFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CpfFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CpfFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaCadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButCadastra;
    private javax.swing.JButton ButCancela;
    private javax.swing.JFormattedTextField CpfField;
    private javax.swing.JFormattedTextField DataField;
    private javax.swing.JFormattedTextField NomeField;
    private javax.swing.JFormattedTextField TelefoneField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
